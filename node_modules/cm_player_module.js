// Exports club manager player module

// Dependencies
var async = require('async');

module.exports = function cmPlayerModule() {
  function cmPlayer(){}
  var dbName = 'cm_player';
  
  // cos = pencilblue custom object service
  // util =  pencilblue utilities
  // cb = callback(error, boolean)
  cmPlayer.install = function(cos, util, cb) {
    cos.loadTypeByName(dbName, function(err, playerType) {
		if(util.isError(err))
		{
			// Call to custom object service failed.
			return cb(err, false);
		}
		else if(!util.isNullOrUndefined(playerType))
		{
			// Custom type already exists.
			return cb(new Error("cm_player custom object already exists."),
						false);
		}

		var player = {
			name: dbName,
			fields: {
				name: { field_type: 'text' },
				number: { field_type: 'text' },
				// TODO Media is mandatory, not working yet //profilePicture: { field_type: 'peer_object', object_type: 'media' },
			description: { field_type: 'wysiwyg' }
			}
		};

		cos.saveType(player, function(err, result){
			return cb(err, !util.isError(err));
		});
	});
  };
  
  // cos = pencilblue custom object service
  // util = pencilblue utitilities
  // cb = callback(error, data)
  cmPlayer.getPlayers = function(cos, util, cb) {
    // Get player type id and use it to find all player objects,
    // finally call cb
    async.waterfall([
      function getPlayerType(cb){
        cos.loadTypeByName(dbName, function(err, playerType) {
          return cb(err, playerType._id);
        });
      },
      function getPlayerObjects(typeId, cb) {
        var selection = ['name', 'number', 'description'];
        cos.findByType(typeId.toString(), {select: selection}, 
          function(err, result) {
            return cb(err, result);
          }
        );
      }
    ], cb);
  }

  return cmPlayer;
};
